#!/bin/sh -e
#
# This script is wrap for popular scheduling system on cluster or supercomputer.
#
# For specifying your scheduling system use MPIRUN --system='name' or define
# variable SYSTEM in your enveroment (e.g. in bash: $ export SYSTEM=slurm).
#
# Now you can use popular systems like mpirun, slurm and loadlever systems.
# If you want add your own system see README.
#
# For getting last version use:
# $ wget https://raw.githubusercontent.com/vladisalv/MPIRUN/master/MPIRUN
# $ chmod +x MPIRUN
#

function main {

DEFAULT_SYSTEMS="mpirun slurm loadlever"
FILE_RC=$HOME/.MPIRUNrc

# check first argument is operation
OP=$1
shift
case "$OP" in
    launch|l) OP=launch;;
    queue |q) OP=queue;;
    cancel|c) OP=cancel;;
    -help|-h) help_message; exit;;
    *       ) echo "You use unknow command '$OP'"; exit;;
esac

parse_option $@

# read user settings
if [ -f $FILE_RC ]; then
    . $FILE_RC
fi
SYSTEMS="$DEFAULT_SYSTEMS $USER_SYSTEMS"

# set enviroment for your SYSTEM
for i in $SYSTEMS
do
    if [ "$i" == "$SYSTEM" ]; then
        EXIST=yes
        set_$SYSTEM
        break
    fi
done

# check that SYSTEM is avaliable
if [ "$EXIST" != "yes" ]; then
    echo "You use unknow system '$SYSTEM'"
    exit
fi

# run command
case "$OP" in
    launch)
        echo $LAUNCH $NTASKS $PARTITION $TIME $STDIN $STDOUT $STDERR $EXTRA $TASK $ARGUMENTS
    ;;
    queue )
        echo $QUEUE $TASKID $PARTITION $USR $EXTRA
    ;;
    cancel)
        echo $CANCEL $TASKID $PARTITION $USR $EXTRA
    ;;
esac
} # main function

function help_message {
    echo help menu
}

function parse_option {
    while [[ $# > 0 ]]
    do
        key="$1"
        case $key in
            -h|--help)
            help_message
            exit
            ;;
            -f|--file)
            FILE_RC="$2"
            ;;
            -s|--system)
            SYSTEM="$2"
            ;;
            -n|--ntasks)
            _NTASKS="$2"
            ;;
            -p|--partition)
            _PARTITION="$2"
            ;;
            -r|--task-id)
            _TASKID="$2"
            ;;
            -u|--user)
            _USER="$2"
            ;;
            -t|--time)
            _TIME="$2"
            ;;
            -i|--stdin)
            _STDIN="$2"
            ;;
            -o|--stdout)
            _STDOUT="$2"
            ;;
            --stderr)
            _STDERR="$2"
            ;;
            -e|--extra)
            EXTRA="$2"
            ;;
            -*)
            echo "You used unknow option: '$key'. Use option -h for help"
            exit
            ;;
            *)
            break
            ;;
        esac
        shift # past option
        shift # past argument, because all option have argument
    done
    TASK=$1
    shift #past task name
    _ARGUMENTS=$@
}


function set_mpirun {
    echo -n "You use mpirun: "
    LAUNCH=mpirun
    QUEUE=
    CANCEL=
    NTASKS="${_NTASKS:+"-np $_NTASKS"}"
    PARTITION=
    TIME=
    STDIN=
    STDOUT=
    STDERR=
    ARGUMENTS="$_ARGUMENTS ${_STDOUT:+" | tee $_STDOUT"}"
    TASKID=
    USR=
}

function set_slurm {
    echo -n "You use slurm: "
    LAUNCH=sbatch
    QUEUE=squeue
    CANCEL=scancel
    NTASKS="${_NTASKS:+"--ntasks=$_NTASKS"}"
    PARTITION="${_PARTITION:+"--partition=$_PARTITION"}"
    TIME="${_TIME:+"--time=$_TIME"}"
    STDIN=
    STDOUT="${_STDOUT:+"--output=$_STDOUT"}"
    STDERR=
    ARGUMENTS=$_ARGUMENTS
    TASKID="${_TASKID:+"$_TASKID"}"
    USR="${_USER:+"--user=$_USER"}"
}

function set_loadlever {
    echo -n "You use loadlever: "
}

main $@
